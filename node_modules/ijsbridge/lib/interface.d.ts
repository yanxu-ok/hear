interface BridgeOperation {
    req: Function;
    def: Function;
}
interface BridgeRequestResult {
    err: String;
    result: Object;
}
interface ViewImage {
    image: String;
    title: String;
}
interface ResultObject {
    err: String;
    result: any;
}
interface VideoInfo {
    video: String;
}
interface ChooseResourceResult {
    err: String;
    result: String;
}
interface DialogInput {
    buttons: String[];
}
interface ToastInput {
    title: String;
    duration: Number;
}
interface WebAppInput {
    url: String;
    title: String;
    disableHeader: Boolean;
    enableBridge: Boolean;
    beforeLoad: Object;
}
interface RouterInput {
    router: String;
    params: Object;
}
interface FetchInput {
    url: String;
    option: Object;
}
interface RequestFullscreenVideoPlayInput {
    start: Boolean;
}
interface AudioRecordInput {
    start: Boolean;
}
interface ShareInput {
    share: Object;
    id: any;
}
interface LinkInput {
    url: String;
}
interface PickerMenuItem extends Object {
    title: String;
}
interface PickerMenuInput {
    items: Array<PickerMenuItem>;
}
interface LaunchWechatProgramInput {
    userName: String;
    path: String;
    extDic: Object;
}
interface CurrentPositionInput {
    type: String;
}
interface RequestInput {
    url: String;
    option: Object;
}
interface RegisterAppEventInput {
    event: String;
}
interface UnRegisterAppEventInput {
    event: String;
}
interface TriggerAppEventInput {
    event: String;
    params: any;
}
declare enum Orientation {
    "PORTRAIT",
    "LANDSCAPE",
    "LANDSCAPE-RIGHT",
    "UNLOCK"
}
interface OrientationControlInput {
    orientation: Orientation;
}
interface DlnaControlInput {
    media: String;
}
interface MusicControlItem {
    title: String;
    artwork: String;
    artist: String;
    album: String;
}
declare enum MusicControlState {
    "play",
    "pause"
}
interface MusicControlInput {
    stop?: Boolean;
    item?: MusicControlItem;
    state?: MusicControlState;
}

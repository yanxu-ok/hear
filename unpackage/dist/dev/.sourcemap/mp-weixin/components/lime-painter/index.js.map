{"version":3,"sources":["webpack:///F:/hear/hear/components/lime-painter/index.vue?0779","webpack:///F:/hear/hear/components/lime-painter/index.vue?5a48","webpack:///F:/hear/hear/components/lime-painter/index.vue?2dbf","webpack:///F:/hear/hear/components/lime-painter/index.vue?c933","uni-app:///components/lime-painter/index.vue"],"names":[],"mappings":"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A,4BAHA;AAIA,iBAJA,qBAIA;AACA;AACA,WANA;AAOA,cAPA,gBAOA,GAPA,EAOA;AACA;AACA;AACA,wBADA;;AAGA;AACA,WAbA;;AAeA,OAvBA;AAwBA,KAxHA;AAyHA;AACA,gBA1HA,wBA0HA,MA1HA,EA0HA;AACA;;AAEA,0DAFA;AAGA,4CAHA,SAGA,MAHA;;;AAMA;AACA,+BADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBARA;AASA;AACA;AACA;AACA,kCADA;;AAGA;AACA,qBAfA,IANA;;;AAwBA,KAnJA;AAoJA,iBApJA,yBAoJA,GApJA,EAoJA;AACA;AACA;AACA,kBADA;AAEA;AACA;AACA;AACA;AACA;AACA,aAJA,MAIA;AACA;AACA;AACA,WAVA;AAWA;AACA;AACA,0BADA;;AAGA;AACA;;AAEA,WAlBA;;AAoBA,OArBA;AAsBA,KA3KA;AA4KA,eA5KA,uBA4KA,OA5KA,EA4KA,IA5KA,EA4KA,QA5KA,EA4KA;;AAEA;;;;;;;;;;AAUA,KAxLA;AAyLA,gBAzLA,wBAyLA,OAzLA,EAyLA,IAzLA,EAyLA;AACA;AACA;AACA;;AAEA;AACA;;;;;;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mEAFA,CAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BADA;AAEA,oBAFA;AAGA,sBAHA;AAIA,oBAJA;AAKA,8BALA;AAMA,4BANA;AAOA,8BAPA;;;AAUA,KA3OA;AA4OA,YA5OA,oBA4OA,OA5OA,EA4OA,IA5OA,EA4OA;AACA;AACA,oDADA,EACA,KADA,uBACA,KADA,EACA,MADA,uBACA,MADA,EACA,KADA,uBACA,KADA,EACA,UADA,uBACA,UADA,EACA,SADA,uBACA,SADA,EACA,UADA,uBACA,UADA,EACA,QADA,uBACA,QADA;AAEA;AACA;AACA,2BAJA,GAIA,CAJA;AAKA,mBALA,GAKA,CALA,cAKA,oBALA;AAMA,+BANA,GAMA,8CANA;AAOA,uBAPA,GAOA,CAPA;AAQA,8BARA,GAQA,CARA;AASA,mBATA,GASA,CATA,cASA,iBATA;AAUA;AACA;AAXA,wBAYA,kBAZA;;;AAeA;AACA,sBAhBA,GAgBA,wCAhBA;AAiBA,8BAjBA,GAiBA,2CAjBA;AAkBA;AACA;AAnBA,8BAoBA,mHApBA;AAqBA,sCArBA;AAsBA,oEAtBA;;AAwBA,kCAxBA;;;;AA4BA;AACA;AA7BA;AA+BA,6EA/BA;;AAiCA;AACA;AAlCA,wBAmCA,oFAnCA;AAoCA,uFApCA;AAqCA,kCArCA;;;;AAyCA,4DAzCA;;AA2CA;AACA,6EA5CA;;AA8CA;AACA,mBA/CA,GA+CA,8BA/CA;AAgDA,uBAhDA;AAiDA,oCAjDA;AAkDA,0BAlDA;;;;AAsDA,yBAtDA,yBAmDA,+IACA,6BApDA;AAuDA;AACA,2CAxDA;;;AA2DA,4BA3DA;;;AA8DA;AACA,mBA/DA,GA+DA,gGA/DA;AAgEA;AACA;AACA;AACA;AACA,mBAFA,MAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCA1FA,QASA,GATA,kCAKA,GALA;;;AA6FA,uEA7FA;;AA+FA,KA5UA;AA6UA,YA7UA,oBA6UA,OA7UA,EA6UA,IA7UA,EA6UA;AACA;AACA;AACA;AACA;AACA;;AAEA;AANA,oBAOA,iRAPA,kCAOA,aAPA,YAOA,cAPA,YAOA,iBAPA,YAOA,gBAPA;AAQA;AACA;AACA;AACA;;;AAGA;AACA,iOAfA,CAeA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BADA,mDACA,CADA,qBACA,CADA,qBACA,CADA,qBACA,CADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAfA,MAeA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAHA,MAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAFA,MAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAFA,MAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAFA,MAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAxGA;AAyGA,KAvbA,EAvDA,E","file":"components/lime-painter/index.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./index.vue?vue&type=template&id=3806f0d1&\"\nvar renderjs\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!D:\\\\HBuilderX.2.8.11.20200907.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"components/lime-painter/index.vue\"\nexport default component.exports","export * from \"-!D:\\\\HBuilderX.2.8.11.20200907.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!D:\\\\HBuilderX.2.8.11.20200907.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--16-0!D:\\\\HBuilderX.2.8.11.20200907.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!D:\\\\HBuilderX.2.8.11.20200907.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!D:\\\\HBuilderX.2.8.11.20200907.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX.2.8.11.20200907.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./index.vue?vue&type=template&id=3806f0d1&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!D:\\\\HBuilderX.2.8.11.20200907.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX.2.8.11.20200907.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!D:\\\\HBuilderX.2.8.11.20200907.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX.2.8.11.20200907.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX.2.8.11.20200907.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!D:\\\\HBuilderX.2.8.11.20200907.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX.2.8.11.20200907.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!D:\\\\HBuilderX.2.8.11.20200907.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX.2.8.11.20200907.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX.2.8.11.20200907.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./index.vue?vue&type=script&lang=js&\"","<template>\r\n\t<view><canvas :canvas-id=\"id\" :style=\"'width:' + boardWidth + '; height:' + boardHeight + ';' + customStyle\"></canvas></view>\r\n</template>\r\n\r\n<script>\r\n/** 从 0x20 开始到 0x80 的字符宽度数据 */\r\nconst CHAR_WIDTH_SCALE_MAP = [0.296, 0.313, 0.436, 0.638, 0.586, 0.89, 0.87, 0.256, 0.334, 0.334, 0.455, 0.742, 0.241, 0.433, 0.241, 0.427, 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.241, 0.241, 0.742, 0.742, 0.742, 0.483, 1.031, 0.704, 0.627, 0.669, 0.762, 0.55, 0.531, 0.744, 0.773, 0.294, 0.396, 0.635, 0.513, 0.977, 0.813, 0.815, 0.612, 0.815, 0.653, 0.577, 0.573, 0.747, 0.676, 1.018, 0.645, 0.604, 0.62, 0.334, 0.416, 0.334, 0.742, 0.448, 0.295, 0.553, 0.639, 0.501, 0.64, 0.567, 0.347, 0.64, 0.616, 0.266, 0.267, 0.544, 0.266, 0.937, 0.616, 0.636, 0.639, 0.64, 0.382, 0.463, 0.373, 0.616, 0.525, 0.79, 0.507, 0.529, 0.492, 0.334, 0.269, 0.334, 0.742, 0.296];\r\n\r\nconst setStringPrototype = (screen) => {\r\n\t/* eslint-disable no-extend-native */\r\n\t  /**\r\n\t   * 是否支持负数\r\n\t   * @param {Boolean} minus 是否支持负数\r\n\t   * @param {Number} baseSize 当设置了 % 号时，设置的基准值\r\n\t   */\r\n\tString.prototype.toPx = function (minus, baseSize) {\r\n\t\tconst reg = minus ? (/^-?[0-9]+([.]{1}[0-9]+){0,1}(rpx|px|%)$/g) : (/^[0-9]+([.]{1}[0-9]+){0,1}(rpx|px|%)$/g)\r\n\t\tconst results = reg.exec(this);\r\n\t\tif (!this || !results) {\r\n\t\t    return 0;\r\n\t\t}\r\n\t\tconst unit = results[2];\r\n\t\tconst value = parseFloat(this);\r\n\t\tlet res = 0;\r\n\t\tif (unit === 'rpx') {\r\n\t\t      res = Math.round(value * (screen || 0.5) * 1);\r\n\t\t} else if (unit === 'px') {\r\n\t\t      res = Math.round(value * 1);\r\n\t\t} else if (unit === '%') {\r\n\t\t     res = Math.round(value * baseSize / 100);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n}\r\nexport default {\r\n\tprops:{\r\n\t\tboard: {\r\n\t\t\ttype: Object,\r\n\t\t},\r\n\t\tisAsync: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\tpixelRatio: Number,\r\n\t\tcustomStyle: String,\r\n\t\tisRenderImage: Boolean\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\ttimer: null,\r\n\t\t\t// #ifdef H5 || APP-PLUS || MP-TOUTIAO\r\n\t\t\tid: `painter_${Math.random()}`\r\n\t\t\t// #endif\r\n\t\t\t// #ifndef H5 || APP-PLUS || MP-TOUTIAO\r\n\t\t\tid: `painter`\r\n\t\t\t// #endif\r\n\t\t}\r\n\t},\r\n\twatch:{\r\n\t\tboard: {\r\n\t\t\thandler: 'drawAll',\r\n\t\t\t// immediate: true \r\n\t\t\t// deep: true\r\n\t\t}\r\n\t},\r\n\tcomputed:{\r\n\t\tdpr() {\r\n\t\t\treturn this.pixelRatio || uni.getSystemInfoSync().pixelRatio\r\n\t\t},\r\n\t\twindowWidth() {\r\n\t\t\treturn uni.getSystemInfoSync().windowWidth\r\n\t\t},\r\n\t\tboardWidth() {\r\n\t\t\tconst {width = 200} = this.board || {}\r\n\t\t\treturn width \r\n\t\t},\r\n\t\tboardHeight() {\r\n\t\t\tconst {height = 200} = this.board || {}\r\n\t\t\treturn height\r\n\t\t}\r\n\t},\r\n\tcreated() {\r\n\t\tthis.init()\r\n\t},\r\n\tmounted() {\r\n\t\tif(this.context) {\r\n\t\t\tthis.drawAll()\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tasync initBoard() {\r\n\t\t\tconst { board } = this\r\n\t\t\tif(board?.views?.length) {\r\n\t\t\t\tlet result = await Promise.all(board.views.map(async (item) => {\r\n\t\t\t\t\tif(item.type === 'image') {\r\n\t\t\t\t\t\tconst {height, width, path} = await this.getImageInfo(item.url)\r\n\t\t\t\t\t\treturn Object.assign({}, item, {height, width, url: path})\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn item\r\n\t\t\t\t}))\r\n\t\t\t\treturn result || []\r\n\t\t\t}\r\n\t\t\treturn []\r\n\t\t},\r\n\t\tinit() {\r\n\t\t\tthis.context = uni.createCanvasContext(this.id, this)\r\n\t\t\tsetStringPrototype(this.windowWidth / 750)\r\n\t\t},\r\n\t\tdraw(view) {\r\n\t\t\tthis.context.setFillStyle(view.background || 'white')\r\n\t\t\tthis.context.fillRect(view.css.left.toPx(), view.css.top.toPx(), view.css.width.toPx(), view.css.height.toPx())\r\n\t\t\tthis.context.clip()\r\n\t\t\tthis.drawView(this.context, view)\r\n\t\t\tthis.context.draw(true, () => {\r\n\t\t\t\tif(this.isRenderImage) {\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tthis.saveImgToLocal();\r\n\t\t\t\t\t}, 100)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tasync drawAll() {\r\n\t\t\tlet views = this.isAsync ? await this.initBoard() : this.board.views\r\n\t\t\tif(!this.context || !views.length) {return}\r\n\t\t\tconst board = this.drawRect(this.context, {type: 'view',  css: {left: `${this.board?.left || 0}`, top: `${this.board?.top || 0}`, width: `${this.boardWidth}`, height: `${this.boardHeight}`, background: this.board?.background}})\r\n\t\t\tconst promises = views.map(item => this.drawView(this.context, item)) || [Promise.resolve()]\r\n\t\t\tPromise.all([board].concat(promises)).then((res) => {\r\n\t\t\t\tthis.context.draw(true, () => {\r\n\t\t\t\t\t// 防止字节大量生成\r\n\t\t\t\t\tif(this.isRenderImage) {\r\n\t\t\t\t\t\tclearTimeout(this.timer)\r\n\t\t\t\t\t\tthis.timer = setTimeout(() => {\r\n\t\t\t\t\t\t\tthis.saveImgToLocal();\r\n\t\t\t\t\t\t}, 100)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t},\r\n\t\tsaveImgToLocal() {\r\n\t\t\tuni.canvasToTempFilePath({\r\n\t\t\t\t// x: 0,\r\n\t\t\t\t// y: 0,\r\n\t\t\t\t// width:  this.boardWidth.toPx(),\r\n\t\t\t\t// height: this.boardWidth.toPx(),\r\n\t\t\t\tcanvasId: this.id,\r\n\t\t\t\tdestWidth: this.toNumber(this.boardWidth) * this.dpr,\r\n\t\t\t\tdestHeight: this.toNumber(this.boardHeight) *  this.dpr,\r\n\t\t\t\tsuccess: async (res) => {\r\n\t\t\t\t\tconst photo = await this.getImageInfo(res.tempFilePath)\r\n\t\t\t\t\tif(photo.path) {\r\n\t\t\t\t\t\tthis.$emit('success', photo.path)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tfail: (error) => {\r\n\t\t\t\t\tconsole.error(`canvasToTempFilePath failed, ${JSON.stringify(error)}`);\r\n\t\t\t\t\tthis.$emit('fail', {\r\n\t\t\t\t\t  error: error\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}, this)\r\n\t\t},\r\n\t\tasync drawView(context, view) {\r\n\t\t\tif(view.type == 'view') {\r\n\t\t\t\treturn this.drawRect(context, view)\r\n\t\t\t} else if(view.type == 'image') {\r\n\t\t\t\tif(this.isAsync) {\r\n\t\t\t\t\treturn this.drawRect(context, view)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst {height = 0, width = 0, path: url} = await this.getImageInfo(view.url)\r\n\t\t\t\t\treturn this.drawRect(context, Object.assign(view, {height, width, url}))\r\n\t\t\t\t}\r\n\t\t\t} else if(view.type == 'text'){\r\n\t\t\t\treturn this.drawText(context, view)\r\n\t\t\t}\r\n\t\t},\r\n\t\ttoNumber(value, minus = 0, baseSize = 0) {\r\n\t\t\tif(typeof value === 'string') {\r\n\t\t\t\treturn value.toPx(minus, baseSize)\r\n\t\t\t} else if(typeof value === 'number') {\r\n\t\t\t\treturn value\r\n\t\t\t} else {\r\n\t\t\t\treturn 0\r\n\t\t\t}\r\n\t\t},\r\n\t\tbase64src(base64data) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tconst fs = uni.getFileSystemManager()\r\n\t\t\t\t//自定义文件名\r\n\t\t\t\tconst [, format, bodyData] = /data:image\\/(\\w+);base64,(.*)/.exec(base64data) || [];\r\n\t\t\t\t  if (!format) {reject(new Error('ERROR_BASE64SRC_PARSE'))}\r\n\t\t\t\tconst time = new Date().getTime();\r\n\t\t\t\tconst filePath = `${wx.env.USER_DATA_PATH}/${time}.${format}`\r\n\t\t\t\tconst buffer = uni.base64ToArrayBuffer(bodyData)\r\n\t\t\t\tfs.writeFile({\r\n\t\t\t\t    filePath,\r\n\t\t\t\t    data: buffer,\r\n\t\t\t\t    encoding: 'binary',\r\n\t\t\t\t    success() {\r\n\t\t\t\t\t\tresolve(filePath)\r\n\t\t\t\t    },\r\n\t\t\t\t    fail(err) {\r\n\t\t\t\t\t\treject()\r\n\t\t\t\t\t\tthis.$emit('fail', {\r\n\t\t\t\t\t\t  error: err\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tconsole.log('获取base64图片失败', err)\r\n\t\t\t\t    }\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t},\r\n\t\t//获取图片\r\n\t\tgetImageInfo(imgSrc){\r\n\t\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\t\t// #ifndef H5 || APP-PLUS\r\n\t\t\t\tif(/^data:image\\/(\\w+);base64/.test(imgSrc)) {\r\n\t\t\t\t\timgSrc = await this.base64src(imgSrc)\r\n\t\t\t\t}\r\n\t\t\t\t// #endif\r\n\t\t\t\tuni.getImageInfo({\r\n\t\t\t\t\tsrc: imgSrc,\r\n\t\t\t\t\tsuccess: (image) => {\r\n\t\t\t\t\t\t// 微信小程序会把相对路径转为不完整的绝对路径，要在前面加'/'\r\n\t\t\t\t\t\t// const res = await this.downloadImage(image.path)\r\n\t\t\t\t\t\timage.path =  /^(http|\\/\\/|\\/|wxfile|data:image\\/(\\w+);base64|file|bdfile)/.test(image.path)  ? image.path :  `/${image.path}`\r\n\t\t\t\t\t\tresolve(image)\r\n\t\t\t\t\t\t// console.log('获取图片成功',image)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail: (err) => {\r\n\t\t\t\t\t\treject();\r\n\t\t\t\t\t\tthis.$emit('fail', {\r\n\t\t\t\t\t\t  error: err\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tconsole.log('获取图片失败', err, imgSrc)\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t},\r\n\t\tdownloadImage(url) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tconst downloadTask = uni.downloadFile({\r\n\t\t\t\t\turl,\r\n\t\t\t\t\tsuccess: (res) => {\r\n\t\t\t\t\t\tif(res.statusCode !== 200) {\r\n\t\t\t\t\t\t\tconsole.error(`downloadFile ${url} failed res.statusCode is not 200`)\r\n\t\t\t\t\t\t\treject();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresolve(res.tempFilePath)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail: (error) => {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: error\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tconsole.error(`downloadFile ${url} failed ${JSON.stringify(error)}`);\r\n\t\t\t\t\t\tresolve(url);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t},\r\n\t\tmeasureText(context, text, fontSize) {\r\n\t\t\t// #ifndef APP-PLUS\r\n\t\t\treturn context.measureText(text).width\r\n\t\t\t// #endif\r\n\t\t\t// #ifdef APP-PLUS\r\n\t\t\t// app measureText为0需要累加计算\r\n\t\t\treturn text.split(\"\").reduce((widthScaleSum, char) => {\r\n\t\t\t\tlet code = char.charCodeAt(0);\r\n\t\t\t\tlet widthScale = CHAR_WIDTH_SCALE_MAP[code - 0x20] || 1;\r\n\t\t\t\treturn widthScaleSum + widthScale;\r\n\t\t\t  }, 0) * fontSize;\r\n\t\t\t// #endif\r\n\t\t},\r\n\t\tcalcTextArrs(context, view) {\r\n\t\t\t// 拆分行\r\n\t\t\tconst textArray = view.text.split('\\n')\r\n\t\t\t// 设置属性\r\n\t\t\t// #ifndef MP-TOUTIAO\r\n\t\t\tconst fontWeight = view.css.fontWeight === 'bold' ? 'bold' : 'normal'\r\n\t\t\tconst textStyle = view.css.textStyle === 'italic' ? 'italic' : 'normal'\r\n\t\t\t// #endif\r\n\t\t\t// #ifdef MP-TOUTIAO\r\n\t\t\tconst fontWeight = view.css.fontWeight === 'bold' ? 'bold' : ''\r\n\t\t\tconst textStyle = view.css.textStyle === 'italic' ? 'italic' : ''\r\n\t\t\t// #endif\r\n\t\t\tconst fontSize = view.css.fontSize ?  this.toNumber(view.css.fontSize) : '20rpx'.toPx()\r\n\t\t\tconst fontFamily = view.css.fontFamily || 'sans-serif'\r\n\t\t\tcontext.font = `${textStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;\r\n\t\t\r\n\t\t\tlet width = 0\r\n\t\t\tlet height = 0\r\n\t\t\tlet lines = 0\r\n\t\t\tconst linesArray = []\r\n\t\t\tfor (let index = 0; index < textArray.length; index++) {\r\n\t\t\t\tconst text = textArray[index]\r\n\t\t\t\tconst textLength = this.measureText(context, text, fontSize) // context.measureText(text).width\r\n\t\t\t\tconst minWidth = fontSize\r\n\t\t\t\tlet partWidth = view.css.width ? this.toNumber(view.css.width) : textLength\r\n\t\t\r\n\t\t\t\tif(partWidth < minWidth) {\r\n\t\t\t\t\tpartWidth = minWidth\r\n\t\t\t\t}\r\n\t\t\t\tconst calLines = Math.ceil(textLength / partWidth)\r\n\t\t\t\twidth = partWidth > width ? partWidth : width;\r\n\t\t\t\tlines += calLines;\r\n\t\t\t\tlinesArray[index] = calLines;\r\n\t\t\t}\r\n\t\t\t// 计算行数\r\n\t\t\tlines = view.css.maxLines < lines ? view.css.maxLines : lines\r\n\t\t\t// 计算行高\r\n\t\t\tconst lineHeight = view.css.lineHeight ? (typeof view.css.lineHeight === 'number' ? this.toNumber(view.css.lineHeight) *  fontSize : this.toNumber(view.css.lineHeight)) : fontSize * 1.2\r\n\t\t\theight = lineHeight * lines\r\n\t\t\r\n\t\t\treturn {\r\n\t\t\t\tfontSize,\r\n\t\t\t\twidth: width,\r\n\t\t\t\theight: height,\r\n\t\t\t\tlines: lines,\r\n\t\t\t\tlineHeight: lineHeight,\r\n\t\t\t\ttextArray: textArray,\r\n\t\t\t\tlinesArray: linesArray,\r\n\t\t\t}\r\n\t\t\r\n\t\t},\r\n\t\tdrawText(context, view) {\r\n\t\t\treturn new Promise( async (resolve, reject) => {\r\n\t\t\t\tconst {width, height, lines, lineHeight, textArray, linesArray, fontSize} =  this.calcTextArrs(context, view)\r\n\t\t\t\tcontext.fillStyle = (view.css?.color || 'black')\r\n\t\t\t\t// context.setTextBaseline('top')\r\n\t\t\t\tlet lineIndex = 0\r\n\t\t\t\tfor (let i = 0; i < textArray.length; i++) {\r\n\t\t\t\t\tconst preLineLength = Math.ceil(textArray[i].length / linesArray[i])\r\n\t\t\t\t\tlet start = 0\r\n\t\t\t\t\tlet alreadyCount = 0\r\n\t\t\t\t\tfor (let j = 0; j < linesArray[i]; j++) {\r\n\t\t\t\t\t\tcontext.save()\r\n\t\t\t\t\t\t// 绘制行数大于最大行数，则直接跳出循环\r\n\t\t\t\t\t\tif (lineIndex >= lines) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\talreadyCount = preLineLength\r\n\t\t\t\t\t\tlet text = textArray[i].substr(start, alreadyCount)\r\n\t\t\t\t\t\tlet measuredWith = this.measureText(context, text, fontSize)\r\n\t\t\t\t\t\t// 如果测量大小小于width一个字符的大小，则进行补齐，如果测量大小超出 width，则进行减除\r\n\t\t\t\t\t\t// 如果已经到文本末尾，也不要进行该循环\r\n\t\t\t\t\t\t while ((start + alreadyCount <= textArray[i].length) && (width - measuredWith > fontSize || measuredWith - width > fontSize)) {\r\n\t\t\t\t\t\t\tif (measuredWith < width) {\r\n\t\t\t\t\t\t\t\ttext = textArray[i].substr(start, ++alreadyCount);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (text.length <= 1) {\r\n\t\t\t\t\t\t\t\t\t// 如果只有一个字符时，直接跳出循环\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttext = textArray[i].substr(start, --alreadyCount);\r\n\t\t\t\t\t\t\t\t// break;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tmeasuredWith = this.measureText(context, text, fontSize)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstart += text.length\r\n\t\t\t\t\t\t// 如果是最后一行了，发现还有未绘制完的内容，则加...\r\n\t\t\t\t\t\tif (lineIndex === lines - 1 && (i < textArray.length - 1 || start < textArray[i].length)) {\r\n\t\t\t\t\t\t\twhile (this.measureText(context, `${text}...`, fontSize) > width) {\r\n\t\t\t\t\t\t\t\tif (text.length <= 1) {\r\n\t\t\t\t\t\t\t\t\t// 如果只有一个字符时，直接跳出循环\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttext = text.substring(0, text.length - 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttext += '...';\r\n\t\t\t\t\t\t\tmeasuredWith = this.measureText(context, text, fontSize)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontext.setTextAlign(view.css.textAlign ? view.css.textAlign : 'left');\r\n\t\t\t\t\t\tlet x = this.toNumber(view.css.left);\r\n\t\t\t\t\t\tlet lineX;\r\n\t\t\t\t\t\tswitch (view.css.textAlign) {\r\n\t\t\t\t\t\t\tcase 'center':\r\n\t\t\t\t\t\t\t\tx = x + measuredWith / 2 +  ((this.toNumber(view.css.width) || this.toNumber(this.boardWidth, 0 , this.windowWidth)) - measuredWith) / 2;\r\n\t\t\t\t\t\t\t\tlineX = x - measuredWith / 2;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'right':\r\n\t\t\t\t\t\t\t\tx = x + (this.toNumber(view.css.width) || this.toNumber(this.boardWidth, 0 , this.windowWidth));\r\n\t\t\t\t\t\t\t\tlineX = x - measuredWith;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tlineX = x;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// top 等于字体高度加行高\r\n\t\t\t\t\t\tconst y = this.toNumber(view.css.top) + (lineIndex === 0 ? fontSize : (fontSize + lineIndex * lineHeight))\r\n\t\t\t\t\t\t//const y = (view.css?.top?.toPx() || 0) + (this.toNumber(view.css.fontSize) + lineIndex * lineHeight) - this.toNumber(view.css.fontSize)\r\n\t\t\t\t\t\tlineIndex++;\r\n\t\t\t\t\t\tif (view.css.textStyle === 'stroke') {\r\n\t\t\t\t\t\t\tcontext.strokeText(text, x, y, measuredWith)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcontext.fillText(text, x, y, measuredWith * this.dpr)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (view.css.textDecoration) {\r\n\t\t\t\t\t\t\tcontext.lineWidth = fontSize / 13;\r\n\t\t\t\t\t\t\tcontext.beginPath();\r\n\t\t\t\t\t\t\tif (/\\bunderline\\b/.test(view.css.textDecoration)) {\r\n\t\t\t\t\t\t\t  context.moveTo(lineX, y);\r\n\t\t\t\t\t\t\t  context.lineTo(lineX + measuredWith, y);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (/\\boverline\\b/.test(view.css.textDecoration)) {\r\n\t\t\t\t\t\t\t  context.moveTo(lineX, y - fontSize);\r\n\t\t\t\t\t\t\t  context.lineTo(lineX + measuredWith, y - fontSize);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (/\\bline-through\\b/.test(view.css.textDecoration)) {\r\n\t\t\t\t\t\t\t  context.moveTo(lineX, y - fontSize / 2.5);\r\n\t\t\t\t\t\t\t  context.lineTo(lineX + measuredWith, y - fontSize / 2.5);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcontext.closePath();\r\n\t\t\t\t\t\t\tcontext.strokeStyle = view.css.color;\r\n\t\t\t\t\t\t\tcontext.stroke();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontext.restore()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsetTimeout(() => resolve('ok'), 100)\r\n\t\t\t})\r\n\t\t},\r\n\t\tdrawRect(context, view) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tlet left = view.css?.left?.toPx() || 0\r\n\t\t\t\tlet top = view.css?.top?.toPx() || 0\r\n\t\t\t\tconst width = view.css?.width.toPx() || 0\r\n\t\t\t\tconst height = view.css?.height.toPx() || 0\r\n\t\t\t\t\r\n\t\t\t\t// 圆角\r\n\t\t\t\tlet [topLeftRadius, topRightRadius, bottomRightRadius, bottomLeftRadius] = view.css?.radius?.split(' ').map((item) => /^\\d/.test(item) && item.toPx(0, width), []) || [0]\r\n\t\t\t\tlet radius = topLeftRadius\r\n\t\t\t\ttopRightRadius = topRightRadius || topLeftRadius\r\n\t\t\t\tbottomRightRadius = bottomRightRadius || topLeftRadius\r\n\t\t\t\tbottomLeftRadius = bottomLeftRadius || topRightRadius\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t// 字节不支持 transparent\r\n\t\t\t\tconst color = view.css?.backgroundColor || view.css?.background || 'white' //'transparent'\r\n\t\t\t\tconst border = view.css?.border?.split(' ').map(item => /^\\d/.test(item) ? item.toPx() : item)\r\n\t\t\t\tconst shadow = view.css?.shadow\r\n\t\t\t\tconst angle  = view.css?.rotate\r\n\t\t\t\t \r\n\t\t\t\tcontext.save()\r\n\t\t\t\tcontext.setFillStyle(color)\r\n\t\t\t\t// 旋转 \r\n\t\t\t\tif(angle) {\r\n\t\t\t\t\tcontext.translate(left + width / 2, top + height / 2)\r\n\t\t\t\t\tcontext.rotate(angle * Math.PI / 180)\r\n\t\t\t\t\tcontext.translate(- left - width / 2 , - top - height / 2)\r\n\t\t\t\t}\r\n\t\t\t\t// 投影\r\n\t\t\t\tif(shadow) {\r\n\t\t\t\t\tconst [x, y, b, c] = shadow.split(' ')\r\n\t\t\t\t\tcontext.shadowOffsetX = x.toPx()\r\n\t\t\t\t\tcontext.shadowOffsetY = y.toPx()\r\n\t\t\t\t\tcontext.shadowBlur = b.toPx()\r\n\t\t\t\t\tcontext.shadowColor = c\r\n\t\t\t\t}\r\n\t\t\t\t// 圆角\r\n\t\t\t\tif(radius) {\r\n\t\t\t\t\tcontext.beginPath()\r\n\t\t\t\t\t// 右下角\r\n\t\t\t\t\tcontext.arc(left + width - (bottomRightRadius || radius), top + height - (bottomRightRadius || radius), (bottomRightRadius || radius), 0, Math.PI * 0.5)\r\n\t\t\t\t\tcontext.lineTo(left + (bottomLeftRadius || radius), top + height)\r\n\t\t\t\t\t// 左下角\r\n\t\t\t\t\tcontext.arc(left + (bottomLeftRadius || radius), top + height - (bottomLeftRadius || radius), (bottomLeftRadius || radius), Math.PI * 0.5, Math.PI)\r\n\t\t\t\t\tcontext.lineTo(left, top + radius)\r\n\t\t\t\t\t// 左上角\r\n\t\t\t\t\tcontext.arc(left + radius, top + radius, radius, Math.PI, Math.PI * 1.5)\r\n\t\t\t\t\tcontext.lineTo(left + width - (topRightRadius || radius), top)\r\n\t\t\t\t\t// 右上角\r\n\t\t\t\t\tcontext.arc(left + width - (topRightRadius || radius), top + (topRightRadius || radius), (topRightRadius || radius), Math.PI * 1.5, Math.PI * 2)\r\n\t\t\t\t\tcontext.closePath()\r\n\t\t\t\t\tcontext.fill()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontext.fillRect(left, top, width, height)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 填充图片\r\n\t\t\t\tif(view?.type == 'image') {\r\n\t\t\t\t\t// 字节不支持 transparent\r\n\t\t\t\t\tcontext.fillStyle = 'white'\r\n\t\t\t\t\tradius && context.clip()\r\n\t\t\t\t\t// 获得缩放到图片大小级别的裁减框\r\n\t\t\t\t\tlet rWidth = view.width\r\n\t\t\t\t\tlet rHeight = view.height\r\n\r\n\t\t\t\t\tlet startX = 0\r\n\t\t\t\t\tlet startY = 0\r\n\t\t\t\t\t// 绘画区域比例\r\n\t\t\t\t\tconst cp = width / height\r\n\t\t\t\t\t// 原图比例\r\n\t\t\t\t\tconst op = rWidth / rHeight\r\n\t\t\t\t\tif (cp >= op) {\r\n\t\t\t\t\t\trHeight = rWidth / cp;\r\n\t\t\t\t\t\t// startY = Math.round((view.height - rHeight) / 2)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trWidth = rHeight * cp;\r\n\t\t\t\t\t\tstartX = Math.round((view.width - rWidth) / 2)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (view.css && view.mode === 'scaleToFill') {\r\n\t\t\t\t\t\tcontext.drawImage(view.url, left, top, width, height);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontext.drawImage(view.url, startX, startY, rWidth, rHeight, left, top, width, height)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// 描边\r\n\t\t\t\tif(border) {\r\n\t\t\t\t\tconst lineWidth = border[0]\r\n\t\t\t\t\tcontext.lineWidth = lineWidth\r\n\t\t\t\t\tif(border[1] == 'dashed') {\r\n\t\t\t\t\t\tcontext.setLineDash([Math.ceil(lineWidth * 4 / 3), Math.ceil(lineWidth * 4 / 3)])\r\n\t\t\t\t\t} else if(border[1] == 'dotted') {\r\n\t\t\t\t\t\tcontext.setLineDash([lineWidth, lineWidth])\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 字节不支持strokeStyle\r\n\t\t\t\t\tcontext.setStrokeStyle(border[2])\r\n\t\t\t\t\t// context.strokeStyle = border[2]\r\n\t\t\t\t\tif(radius) {\r\n\t\t\t\t\t\tcontext.stroke()\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontext.strokeRect(left, top, width, height)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcontext.restore()\r\n\t\t\t\tsetTimeout(() => resolve('ok'), 50)\r\n\t\t\t})\r\n\t\t},\r\n\t}\r\n}\r\n</script>\r\n\r\n<style></style>\r\n"],"sourceRoot":""}